<% import software.altitude.core.Const %>
<% import software.altitude.core.AltitudeServletContext %>
<% import software.altitude.core.RequestContext %>
<% import software.altitude.core.models.Asset %>
<% import software.altitude.core.util.SearchResult %>
<%@ val results: SearchResult %>

<style>
  #assets .cell {
    margin: 3px;
    border: var(--result-border);
    touch-action: none;
  }

  #assets .cell img {
    display: block;
    cursor: pointer;
  }

  #assets .grid {
    margin: 10px;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: center;
  }

  #assets .cell {
    display: grid;
    width:<%= software.altitude.core.AltitudeServletContext.app.config.getInt(Const.Conf.PREVIEW_BOX_PIXELS).toInt + 20 %>px;
    height:<%= software.altitude.core.AltitudeServletContext.app.config.getInt(Const.Conf.PREVIEW_BOX_PIXELS).toInt + 20 %>px;
    place-items: center;
  }

  #assets .cell  > .inner-cell.can-drop {
    padding-left: 4px;
    border: var(--dnd-draggable-border);
    border-radius: 4px;
    background-color: var(--dnd-can-drop-color);
  }
</style>

<div id="assets">
  <div class="grid">
    <% include("../htmx/results_grid.ssp") %>
  </div>

</div>

<script type="module">
  import { selectTab } from "../../../../js/common/navigation.js"
  import { context } from "../../../../js/context.js"
  import { observer } from "../../../../js/search-results/infinite-scroll.js"

  selectTab("explorer", "foldersTab")

  /**
   * Observe every new cell element in the grid for lazy loading/unloading
   */
  document
      .querySelector("#assets .grid")
      .addEventListener("htmx:load", function (evt) {
          const imgEl = evt.target.querySelector("img")
          if (imgEl !== null) {
              observer.observe(imgEl)
          }
      })

  /**
   * Set the necessary context for script includes (below)
   */
  context.repoId = "${ RequestContext.getRepository.persistedId }"
</script>

<script type="module" src="/js/search-results/dragon-drop.js"></script>
